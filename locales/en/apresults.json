{
    "ABANDONED": "The game was abandoned.",
    "ADD": {
        "add_one": "{{player}} added 1 piece to {{where}}.",
        "add_other": "{{player}} added {{count}} pieces to {{where}}.",
        "logger": "The tree at {{where}} grew one stage.",
        "nonum": "{{player}} added a piece to {{where}}.",
        "twixt": "{{player}} added a link at {{where}}."
    },
    "AFFILIATE": {
        "cifra_lt": "{{player}} chose to play the light pieces from the top row.",
        "cifra_lb": "{{player}} chose to play the light pieces from the bottom row.",
        "cifra_dt": "{{player}} chose to play the dark pieces from the top row.",
        "cifra_db": "{{player}} chose to play the dark pieces from the top row.",
        "cifra_ll": "{{player}} chose to play the light pieces from the left column.",
        "cifra_lr": "{{player}} chose to play the light pieces from the right column.",
        "cifra_dl": "{{player}} chose to play the dark pieces from the left column.",
        "cifra_dr": "{{player}} chose to play the dark pieces from the right column.",
        "witch_M": "{{player}} chose the Moonstones.",
        "witch_S": "{{player}} chose the Sunstones."
    },
    "ANNOUNCE": {
        "biscuit": "The following cards were in opposing hands: {{cards}}.",
        "deckfish": "{{player}} was unable to move and must pass from now on.",
        "quincunx": "Player {{playerNum}} had the following cards left in their hand: {{cards}}."
    },
    "BEAROFF": {
        "complete_one": "{{player}} bore off one piece from {{from}}.",
        "complete_other": "{{player}} bore off {{count}} pieces from {{from}}.",
        "nowhat": "{{player}} bore off from {{from}}."
    },
    "BLOCK": {
        "bao": "The pit {{pit}} is in kutakatia (is blocked).",
        "between": "{{player}} erected a fence between {{cell1}} and {{cell2}}.",
        "veletas": "{{player}} placed a piece at {{where}}."
    },
    "BUTTON": "{{player}} took the button.",
    "CAPTURE": {
        "ataxx_one": "1 piece is converted.",
        "ataxx_other": "{{count}} pieces are converted.",
        "bao_one": "{{player}} captured a total of {{count}} stone from the following pits (in order): {{pits}}",
        "bao_other": "{{player}} captured a total of {{count}} stones from the following pits (in order): {{pits}}",
        "blastradius_one": "{{player}} removed one enemy piece from {{where}}.",
        "blastradius_other": "{{player}} removed a stack of {{count}} enemy pieces from {{where}}.",
        "blockade": "{{player}} captured a blocking piece at {{where}}.",
        "blooms": "{{player}} captured a {{what}} group of size {{count}}.",
        "boom": "{{player}} destroyed a piece at {{where}}.",
        "buku": "{{count}} pieces were captured at {{where}}.",
        "c1": "{{player}} eliminates a tile at {{where}}.",
        "complete": "{{player}} captured a {{what}} at {{where}}.",
        "dameo_king": "{{player}} captured a king at {{where}}.",
        "dameo_soldier": "{{player}} captured a soldier at {{where}}.",
        "entrapment_opponent": "{{player}} captured an opponent's roamer at {{where}}.",
        "entrapment_self": "{{player}} captured their own roamer at {{where}}.",
        "fightopia_1": "{{player}} captured a pawn at {{where}}.",
        "fightopia_2": "{{player}} captured a tank at {{where}}.",
        "furl": "{{player}} captured a stack of size {{size}} at {{where}}.",
        "gess_one": "{{count}} stone is removed from the board.",
        "gess_other": "{{count}} stones are removed from the board.",
        "group_one": "{{player}} captured a stone at {{cells}}.",
        "group_other": "{{player}} captured {{count}} stones at the following cells: {{cells}}.",
        "hens_chick": "{{player}} captured a chick at {{where}}.",
        "hens_hen": "{{player}} captured a hen at {{where}}.",
        "hexentafl_king": "The king was captured at {{where}}.",
        "lifeline": "Dead pieces were removed at {{where}}.",
        "majorities": "{{count}} pieces were removed.",
        "mancala_one": "{{player}} captured {{count}} stone from {{pit}}.",
        "mancala_other": "{{player}} captured {{count}} stones from {{pit}}.",
        "mattock": "{{player}} captured a miner at {{where}}.",
        "meridians": "A dead group of size {{count}} is removed.",
        "minimal": "A piece was captured.",
        "monkey_queen": "A queen was captured.",
        "monkey_single": "A singleton was captured.",
        "multiple_one": "A piece was captured.",
        "multiple_other": "{{count}} pieces were captured.",
        "murus_double": "{{player}} captured two pieces at {{where}}.",
        "noperson": {
            "group_nowhere": "A group of size {{count}} was captured.",
            "multiple": "The following pieces were captured: {{capped}}.",
            "nowhat": "A piece was captured at {{where}}.",
            "nowhere": "A {{what}} was captured.",
            "nowhere_one": "A piece was captured.",
            "nowhere_other": "{{count}} pieces were captured.",
            "simple": "A {{what}} was captured at {{where}}."
        },
        "nowhat": "{{player}} captured a piece at {{where}}.",
        "onyx": "A pair of pieces was captured at {{where1}} and {{where2}}.",
        "orb_1": "{{player}} captured an orb at {{where}}.",
        "orb_2": "{{player}} captured a spheroid at {{where}}.",
        "pente": "{{player}} captured {{count}} pieces.",
        "pente_self": "{{player}} captured {{count}} of their own pieces.",
        "owlman_approach": "{{player}} scared the helper at {{where}} out of the forest.",
        "owlman_replacement": "{{player}} devoured the piece at {{where}}.",
        "reversi_one": "A piece is flipped.",
        "reversi_other": "{{count}} pieces are flipped.",
        "spook_drop_opponent": "{{player}} has 1 of their opponent's ball captured by Spooky below at {{where}}.",
        "spook_drop_self": "{{player}} has 1 of their own ball captured by Spooky below at {{where}}.",
        "spook_lateral_opponent_one": "{{player}} has 1 of their opponent's ball captured by Spooky on the same level at {{where}}.",
        "spook_lateral_opponent_other": "{{player}} has {{count}} of their opponent's balls captured by Spooky on the same level at {{where}}.",
        "spook_lateral_self_one": "{{player}} has 1 of their own ball captured by Spooky on the same level at {{where}}.",
        "spook_lateral_self_other": "{{player}} has {{count}} of their own balls captured by Spooky on the same level at {{where}}.",
        "tafl": "{{player}} captured a piece at {{where}}.",
        "terrace_other": "{{player}} captured a size {{what}} piece at {{where}}.",
        "terrace_self": "{{player}} cannibalized their own size {{what}} piece at {{where}}.",
        "tumbleweed": "{{player}} captured a stack of size {{count}} at {{where}}.",
        "tumbleweed_self": "{{player}} reinforces a stack of size {{count}} at {{where}}.",
        "witch": {
            "nowhere_C_one": "{{player}} captured {{count}} Crown.",
            "nowhere_C_other": "{{player}} captured {{count}} Crowns.",
            "nowhere_E_one": "{{player}} captured {{count}} Earthstone.",
            "nowhere_E_other": "{{player}} captured {{count}} Earthstones.",
            "nowhere_M_one": "{{player}} captured {{count}} Moonstone.",
            "nowhere_M_other": "{{player}} captured {{count}} Moonstones.",
            "nowhere_S_one": "{{player}} captured {{count}} Sunstone.",
            "nowhere_S_other": "{{player}} captured {{count}} Sunstones.",
            "single_C": "{{player}} picked up a Crown at {{where}}.",
            "single_E": "{{player}} picked up an Earthstone at {{where}}.",
            "single_M": "{{player}} picked up a Moonstone at {{where}}.",
            "single_S": "{{player}} picked up a Sunstone at {{where}}."
        }
    },
    "CLAIM": {
        "buku_singletons_one": "{{player}} claimed the remaining 1 piece on their colour.",
        "buku_singletons_other": "{{player}} claimed the remaining {{count}} pieces on their colour.",
        "buku_repetition_one": "{{player}} claimed all 1 remaining piece.",
        "buku_repetition_other": "{{player}} claimed all {{count}} remaining pieces.",
        "conhex": "{{player}} claimed the space at ({{where}}).",
        "default": "{{player}} claimed {{where}}.",
        "exxit": "{{player}} claimed the perimeter space at {{where}}.",
        "fnap_col": "{{player}} claimed column {{where}}.",
        "fnap_fnap": "{{player}} has claimed the FNAP token.",
        "fnap_row": "{{player}} claimed row {{where}}.",
        "jacynth": "{{player}} exerted influence at {{where}}.",
        "logger": "{{player}} claimed a protestor from the tree felled at {{where}}.",
        "majorities_line": "{{player}} claimed the line {{where}}.",
        "majorities_H": "{{player}} claimed the horizontal direction.",
        "majorities_A": "{{player}} claimed the ascending direction.",
        "majorities_D": "{{player}} claimed the descending direction.",
        "meg": "{{player}} has taken the ball and placed it at {{where}}.",
        "penguin": "The penguin at {{where}} claimed the ball!",
        "toguz": "Pit {{pit}} became a tuz.",
        "veletas": "Shooter at {{where}} is trapped and is claimed by {{who}}."
    },
    "CONNECT": {
        "pontedd": "{{player}} placed a bridge between {{left}} and {{right}}."
    },
    "CONVERT": {
        "complete": "{{player}} turned a {{what}} into a {{into}} at {{where}}.",
        "courtesan": "King and courtesan swapped positions at {{where}}.",
        "moonsquad": "{{player}} recruited a squad.",
        "paintbucket_one": "{{player}} converted 1 piece at {{where}}.",
        "paintbucket_other": "{{player}} converted {{count}} pieces starting at {{where}}.",
        "simple": "{{player}} converted a piece at {{where}}.",
        "storisende_territory": "The tile at {{where}} became a territory.",
        "storisende_wall": "The tile at {{where}} became a wall."
    },
    "DAMAGE": {
        "armadas": "{{player}}'s ship {{myName}} fired upon the enemy ship named {{theirName}}.",
        "pigs": "{{player}} struck {{opponent}} at {{where}}."
    },
    "DECKDRAW": {
        "biscuit": "The next player was unable to play any cards in their hand, so they drew a card.",
        "emu_deck": "{{player}} drew a face-down card from the deck.",
        "emu_discard": "{{player}} drew the {{what}} from the top of the discard pile.",
        "quincunx_one": "{{player}} drew {{count}} card.",
        "quincunx_other": "{{player}} drew {{count}} cards."
    },
    "DECLARE": {
        "biscuit": "{{player}} has gone out!",
        "emu": "Year {{year}} has ended.",
        "mchess": "{{player}} has \"called the clock.\" If no capture is made in the next seven turns, the game will end and be scored.",
        "renju": "{{player}} has declared {{count}} tentative fifths."
    },
    "DELTA_SCORE_GAIN_one": "{{player}} gained {{delta}} point.",
    "DELTA_SCORE_GAIN_other": "{{player}} gained {{delta}} points.",
    "DELTA_SCORE_LOSS_one": "{{player}} lost {{delta}} point.",
    "DELTA_SCORE_LOSS_other": "{{player}} lost {{delta}} points.",
    "DELTASCORE": {
        "emu_excuse": "{{player}} plays The Excuse to offset their lowest-scoring bird ({{delta}} points).",
        "emu_score": "{{player}}'s bird with the following ranks scored {{delta}} points: {{ranks}}.",
        "quincunx": {
            "basic_zero": "Against {{card}} it scored no points.",
            "basic_one": "Against {{card}} it scored 1 point.",
            "basic_other": "Against {{card}} it scored {{delta}} points.",
            "penalty_zero": "Player {{playerNum}} lost no points due to cards in hand.",
            "penalty_one": "Player {{playerNum}} lost {{count}} point due to cards in hand.",
            "penalty_other": "Player {{playerNum}} lost {{count}} points due to cards in hand."
        }
    },
    "DESTROY": {
        "armadas": "{{player}} sunk the enemy ship named {{name}}.",
        "bao": "The nyumba at {{pit}} was destroyed.",
        "enemy": {
            "minimal_one": "{{count}} enemy piece was destroyed.",
            "minimal_other": "{{count}} enemy pieces were destroyed."
        },
        "friendly": {
            "minimal_one": "{{count}} friendly piece was destroyed.",
            "minimal_other": "{{count}} friendly pieces were destroyed."
        },
        "logger": "{{player}} felled a tree at {{where}}.",
        "mattock": "{{player}} mined at {{where}}.",
        "string": "String {{where}} broke under the strain."
    },
    "DETONATE": {
        "nowhat": "{{player}} detonated a piece at {{where}}."
    },
    "DRAWAGREED": "Players agreed to a draw.",
    "EJECT": {
        "assembly": "The production line moved forward {{distance}} spaces.",
        "deckfish": "{{player}} pushed a piece from {{from}} to {{to}}.",
        "penguin_ball": "{{player}} kicked the ball from {{from}} to {{to}}.",
        "penguin_penguin": "A penguin was pushed from {{from}} to {{to}}."
    },
    "ELIMINATED": "{{player}} was eliminated.",
    "EOG": {
        "buku_singletons": "The game has ended because all cells contain only singletons.",
        "camelot_claim_draw_repetition": "The game has ended because {{player}} has claimed a draw by repetition.",
        "camelot_claim_draw_progression": "The game has ended because {{player}} has claimed a draw by the 50 move rule.",
        "consecutive_passes": "The game has ended because both players passed consecutively.",
        "deckfish": "The game has ended because the last player was unable to move.",
        "default": "The game has ended.",
        "material": "The game has ended because both players have insufficient material.",
        "repetition_one": "The game has ended because the same position has occurred by the same player.",
        "repetition_other": "The game has ended because the same position has occurred {{count}} times by the same player.",
        "repetition_positional_one": "The game has ended because the same position has occurred.",
        "repetition_positionas_other": "The game has ended because the same position has occurred {{count}} times.",
        "stalemate": "The game has ended because one player has run out of moves.",
        "susan_nonplacement": "The game has ended because no player has placed a piece for 6 plies.",
        "tafl_encirclement": "The game has ended because the defenders are encircled.",
        "tafl_exit_fort": "The game has ended because the defenders created an exit fort.",
        "tafl_king_captured": "The game has ended because the king was captured.",
        "tafl_king_escaped": "The game has ended because the king escaped.",
        "unlur_foul": "The game has ended because one player has achieved the opponent's win condition without achieving their own."
    },
    "ERUPTIONS": "The following pieces erupted: {{eruptions}}.",
    "FIRE": {
        "murus": "{{player}} fired a catapult from {{from}} to {{to}}.",
        "pigs_F": "{{player}} fired their laser at {{direction}}.",
        "pigs_H": "{{player}} swung their mighty snout!"
    },
    "FLIP": "{{player}} flips {{where}} and reveals {{revealed}}.",
    "FURL": {
        "furl": "{{player}} furls {{count}} pieces from {{from}} to {{to}}."
    },
    "IMMOBILIZE": {
        "realm": "{{player}} immobilized the enforcer at {{where}}."
    },
    "INFINITE": "{{player}} has triggered an infinite loop!",
    "KOMI": "{{player}} sets komi to {{value}}.",
    "LEAD": "{{player}} took the lead.",
    "MOVE": {
        "amazons": "{{player}} moved from {{from}} to {{to}} and then blocked off cell {{block}}.",
        "anache_dragon": "{{player}} moved a group of size {{count}} via a dragon move from {{from}} in the direction {{dir}}.",
        "anache_dragon_jump": "{{player}} jumps their dragon from {{from}} to {{to}}.",
        "anache_knight": "{{player}} moved a group of size {{count}} via a knight move from {{from}} in the direction {{dir}}.",
        "anache_man": "{{player}} moved a group of size {{count}} from {{from}} in the direction {{dir}}.",
        "armadas": "{{player}} moved their ship named {{name}}.",
        "ataxx_jump": "{{player}} jumped a piece from {{from}} to {{to}}.",
        "ataxx_split": "{{player}} split a piece from {{from}} to {{to}}.",
        "ball": "{{player}} moved a ball from {{from}} to {{to}}.",
        "ball_drop_one": "A ball dropped from {{from}} to {{to}}.",
        "ball_drop_other": "{{count}} balls dropped from {{from}} to {{to}}.",
        "bao": "Initial direction of movement: {{direction}}.",
        "blockade": "{{player}} moved a piece from {{from}} to {{to}}.",
        "byte": {
            "full": "{{player}} moved a full stack from {{from}} to {{to}}.",
            "partial_one": "{{player}} moved {{count}} checker from {{from}} to {{to}}.",
            "partial_other": "{{player}} moved {{count}} checkers from {{from}} to {{to}}."
        },
        "camelot_castle_knight": "{{player}} made a castle move with a knight from {{from}} to {{to}}.",
        "camelot_castle": "{{player}} made a castle move with a man from {{from}} to {{to}}.",
        "camelot_plain_knight": "{{player}} made a plain move with a knight from {{from}} to {{to}}.",
        "camelot_plain": "{{player}} made a plain move with a man from {{from}} to {{to}}.",
        "camelot_canter_knight": "{{player}} made a canter with a knight from {{from}} to {{to}}.",
        "camelot_canter": "{{player}} made a canter with a man from {{from}} to {{to}}.",
        "camelot_jump_knight": "{{player}} made a jump with a knight from {{from}} to {{to}}, capturing {{captured}}.",
        "camelot_jump": "{{player}} made a jump with a man from {{from}} to {{to}}, capturing {{captured}}.",
        "chase": "{{player}} moved from {{from}} to {{to}} (through {{through}}).",
        "collision": "{{player}} tried to move from {{from}} to {{to}} but couldn't because of a collision.",
        "complete": "{{player}} moved a {{what}} from {{from}} to {{to}}.",
        "complete_one": "{{player}} moved one piece from {{from}} to {{to}}.",
        "complete_other": "{{player}} moved {{count}} pieces from {{from}} to {{to}}.",
        "deckfish": "{{player}} moved a piece from {{from}} to {{to}}, collecting {{what}}.",
        "entrapment_barrier": "{{player}} moved a barrier from {{from}} to {{to}}.",
        "entrapment_roamer": "{{player}} moved a roamer from {{from}} to {{to}}.",
        "entrapment_roamer_jump": "{{player}} moved a roamer from {{from}} to {{to}}, jumping over {{jumped}}.",
        "fightopia_1": "{{player}} moved a pawn from {{from}} to {{to}}.",
        "fightopia_2": "{{player}} moved a tank from {{from}} to {{to}}.",
        "fightopia_4": "{{player}} moved their giant from {{from}} to {{to}}.",
        "fightopia_pivot": "{{player}} pivoted a tank from {{from}} to {{to}}.",
        "gess_one": "{{player}} moved a 3x3 piece containing {{count}} stone from {{from}} to {{to}}.",
        "gess_other": "{{player}} moved a 3x3 piece containing {{count}} stones from {{from}} to {{to}}.",
        "hexentafl_king": "{{player}} moved the king from {{from}} to {{to}}.",
        "iqishiqi": "{{player}} moved neutral stone {{from}} to {{to}}.",
        "mattock": "{{player}} moved a miner from {{from}} to {{to}}.",
        "meg": "{{player}} passed the ball from {{from}} to {{to}}.",
        "monkey_queen": "{{player}} moved their queen from {{from}} to {{to}}.",
        "monkey_single": "{{player}} moved a singleton from {{from}} to {{to}}.",
        "multiple": "{{player}} made the following moves: {{moves}}.",
        "nowhat": "{{player}} moved from {{from}} to {{to}}.",
        "onager_jump": "{{player}} jumped a piece from {{from}} to {{to}}.",
        "onager_walk": "{{player}} walked a piece from {{from}} to {{to}}.",
        "orb_1": "{{player}} moved an orb from {{from}} to {{to}}.",
        "orb_2": "{{player}} moved a spheroid from {{from}} to {{to}}.",
        "orb_2S": "{{player}} moved a split spheroid from {{from}} to {{to}}.",
        "orb_3": "{{player}} moved a globe from {{from}} to {{to}}.",
        "phutball": "{{player}} moved the ball from {{from}} to {{to}},",
        "phutball_last": "{{player}} moved the ball from {{from}} to {{to}}.",
        "phutball_to": "to {{to}},",
        "phutball_to_last": "to {{to}}.",
        "push": "A {{what}} was pushed from {{from}} to {{to}}.",
        "saltire": "{{player}} swapped the pieces at {{from}} and {{to}}.",
        "slyde": "{{player}} slid a piece from {{from}} to {{to}}.",
        "spook": "{{player}} moved Spooky from {{from}} to {{to}}.",
        "susan": "{{player}} slid a piece from {{from}} to {{to}}.",
        "tafl": "{{player}} moved a piece from {{from}} to {{to}}.",
        "tafl_jump": "{{player}} jumped a piece from {{from}} to {{to}}.",
        "veletas": "{{player}} moved shooter from {{from}} to {{to}}.",
        "volo_one": "{{player}} moved a flock of 1 bird from {{from}} in the direction {{how}}.",
        "volo_other": "{{player}} moved a flock of {{count}} birds from {{from}} in the direction {{how}}."
    },
    "NULLIFY_CLAIM": "Towers may not be claimed on the last turn of the game. The claim at {{where}} was nullified.",
    "ORIENT": {
        "nowhat": "{{player}} turned a piece at {{where}} to face {{facing}}."
    },
    "PASS": {
        "asli": "{{player}} took an opposing piece from the prison and passed their turn.",
        "assembly": "The production line doesn't move.",
        "deckfish": "{{player}} was unable to move.",
        "entropy": "{{player}} chose not to move any pieces this turn.",
        "forced": "{{player}} was forced to pass.",
        "pie": "{{player}} accepted the komi offer and will continue playing second.",
        "pigs": "{{player}} idles.",
        "simple": "{{player}} passed.",
        "tablero": "{{player}} bumped!",
        "tiebreaker": "{{player}} passed, winning the tiebreaker."
    },
    "PIE": {
        "deckfish": "{{player}} moves second.",
        "default": "{{player}} invoked the pie rule.",
        "unlur": "{{player}} has passed to be the Y player."
    },
    "PLACE": {
        "armadas_1": "{{player}} placed a small ship and named it {{name}}.",
        "armadas_2": "{{player}} placed a medium ship and named it {{name}}.",
        "armadas_3": "{{player}} placed a large ship and named it {{name}}.",
        "ball": "{{player}} placed a ball at {{where}}.",
        "blastradius": "{{player}} added a piece to {{where}}, creating a stack of height {{height}}.",
        "blockade_h": "{{player}} placed a horizontal fence at {{where}}.",
        "blockade_v": "{{player}} placed a vertical fence at {{where}}.",
        "blooms": "{{player}} placed a {{what}} piece at {{where}}.",
        "bug_bonus_grow": "Upon capture, a bug grew at {{where}} to a size of {{size}}.",
        "bug_grow": "{{player}} grew a bug at {{where}} to a size of {{size}}.",
        "bug_new": "{{player}} introduced a new bug at {{where}}.",
        "camelot_tree": "{{player}} placed trees at {{where}}.",
        "cannon": "{{player}} placed their town at {{where}}.",
        "ccorridor": "{{player}} placed a tile at {{where}}.",
        "chase": "The chamber spit out a {{what}} at {{where}}.",
        "complete": "{{player}} placed a {{what}} at {{where}}.",
        "conhex": "{{player}} placed a piece at vertex {{where}}.",
        "connecticut": "{{player}} placed a triomino at {{where}}.",
        "boxes": "{{player}} adds a line at {{where}}.",
        "boxes_claim1": "{{player}} adds a line at {{where}}, claiming {{box}}.",
        "boxes_claim2": "{{player}} adds a line at {{where}}, claiming {{box1}} and {{box2}}.",
        "decktet": "{{player}} placed \"{{what}}\" at {{where}}.",
        "deckfish": "{{player}} placed a piece at {{where}}.",
        "emu_discard": "{{player}} discarded the card {{what}}.",
        "emu_existing": "{{player}} used the {{what}} to grow bird #{{where}}.",
        "emu_new": "{{player}} hatched a new bird with the {{what}}.",
        "entrapment_barrier": "{{player}} placed a barrier at {{where}}.",
        "entrapment_roamer": "{{player}} placed a roamer at {{where}}.",
        "epam": "{{player}} placed a stone at {{where}}.",
        "gorogo_henge": "{{player}} placed a henge piece at {{where}}.",
        "gorogo_piece": "{{player}} placed a piece at {{where}}.",
        "iqishiqi": "{{player}} placed a shared stone at {{where}}.",
        "logger_logger": "{{player}} placed their logger at {{where}}.",
        "logger_plant": "{{player}} planted a sapling at {{where}}.",
        "logger_spawn": "A new sapling sprouted at {{where}}.",
        "mattock": "{{player}} placed a miner at {{where}}.",
        "meg_cap": "{{player}} placed a blocker at {{where}}.",
        "meg_cup": "{{player}} placed a receiver at {{where}}.",
        "mine": "{{player}} placed one of their own pieces at {{where}}.",
        "moonsquad": "{{player}} placed a squad at {{where}}.",
        "neutral": "A neutral piece was placed at {{where}}.",
        "nex": "{{player}} placed a piece of their colour at {{where}}.",
        "nex_neutral": "{{player}} placed a neutral piece at {{where}}.",
        "nowhat": "{{player}} placed a piece at {{where}}.",
        "onager": "{{player}} placed a lake at {{where}}.",
        "orb": "{{player}}'s orb generator created an orb at {{where}}.",
        "pahtum_block": "{{player}} blocked off {{where}}.",
        "pahtum_piece": "{{player}} placed a piece at {{where}}.",
        "phutball": "{{player}} placed a player at {{where}}.",
        "PYRAMID_1": "{{player}} placed a small piece at {{where}}.",
        "PYRAMID_2": "{{player}} placed a medium piece at {{where}}.",
        "PYRAMID_3": "{{player}} placed a large piece at {{where}}.",
        "quax_diag": "{{player}} placed a diagonal connection at {{where}}.",
        "query_c4": "{{player}} two pieces at vertices {{where}}.",
        "query_c8": "{{player}} one piece at vertex {{where}}.",
        "renju_tentative": "{{player}} placed a tentative fifth at {{where}}.",
        "renju_tentative_choose": "{{player}} chose the fifth stone at {{where}}.",
        "siegeofj": "{{player}} placed \"{{what}}\" next to {{where}}.",
        "spire_neutral": "{{player}} placed a neutral ball at {{where}}.",
        "spire_player": "{{player}} placed a ball of their colour at {{where}}.",
        "spooky": "Spooky has entered the board at {{where}}.",
        "strands_initial": "{{player}} placed a piece on a space labelled 2 at {{where}}.",
        "strands_one": "{{player}} placed a piece at {{where}}.",
        "strands_other": "{{player}} placed {{count}} pieces at {{where}}.",
        "streetcar": "A building was placed at {{where}}.",
        "streetcar_11": "A height-1 ORANGE building was placed at {{where}}.",
        "streetcar_12": "A height-2 ORANGE building was placed at {{where}}.",
        "streetcar_13": "A height-3 ORANGE building was placed at {{where}}.",
        "streetcar_21": "A height-1 YELLOW building was placed at {{where}}.",
        "streetcar_22": "A height-2 YELLOW building was placed at {{where}}.",
        "streetcar_23": "A height-3 YELLOW building was placed at {{where}}.",
        "streetcar_31": "A height-1 BLACK building was placed at {{where}}.",
        "streetcar_32": "A height-2 BLACK building was placed at {{where}}.",
        "streetcar_33": "A height-3 BLACK building was placed at {{where}}.",
        "streetcar_41": "A height-1 WHITE building was placed at {{where}}.",
        "streetcar_42": "A height-2 WHITE building was placed at {{where}}.",
        "streetcar_43": "A height-3 WHITE building was placed at {{where}}.",
        "subdivision_park": "{{player}} placed a park at {{where}}.",
        "terrace": "{{player}} moved a size {{size}} piece from {{from}} to {{to}}.",
        "theirs": "{{player}} placed an enemy piece at {{where}}.",
        "trax": "{{player}} placed a {{piece}} at {{algebraic}} ({{where}}).",
        "tritium-orange": "{{player}} played an orange tile at {{where}}.",
        "tritium-purple": "{{player}} played a purple tile at {{where}}.",
        "tritium-green": "{{player}} played a green tile at {{where}}.",
        "tritium-flag": "{{player}} played a flag at {{where}}.",
        "tumbleweed": "{{player}} placed a stack of size {{count}} at {{where}}.",
        "twixt": "{{player}} placed a peg at {{where}}.",
        "upperhand_chain": "A ball of {{whose}} was placed at {{where}}.",
        "urbino": {
            "house": "{{player}} placed a house at {{where}}.",
            "palace": "{{player}} placed a palace at {{where}}.",
            "tower": "{{player}} placed a tower at {{where}}.",
            "worker": "{{player}} placed an architect at {{where}}."
        },
        "veletas": "{{player}} placed a {{what}} at {{where}}.",
        "volo": "{{player}} adds a bird at {{where}}."
    },
    "PLAYSECOND": "{{player}} chose to play second.",
    "PROMOTE": {
        "basicWhere": "The piece at {{where}} was promoted.",
        "cubeo": "{{player}} promoted the die at {{where}} from a {{from}} to a {{to}}.",
        "lielow": "{{player}} has a new king crowned at {{where}}.",
        "mchess": "A {{into}} was created as a result.",
        "orb_12": "{{player}} promoted an orb to a spheroid at {{where}}.",
        "orb_13": "{{player}} promoted an orb to a globe at {{where}}.",
        "orb_23": "{{player}} promoted spheroid to a globe at {{where}}."
    },
    "PULL": "{{player}} pulled string {{where}}.",
    "RECLAIM": {
        "noperson": "A {{what}} was reclaimed.",
        "nowhat_one": "A piece was reclaimed.",
        "nowhat_other": "{{count}} pieces were reclaimed."
    },
    "REMOVE": {
        "entrapment_opponent": "{{player}} chose to retain the opponent's roamer at {{how}}, removing the roamer at {{where}}.",
        "entrapment_self": "{{player}} chose to retain their own roamer at {{how}}, removing the roamer at {{where}}.",
        "fourinarow_e": "{{player}} cleared a line, shifting the pieces on the board rightwards.",
        "fourinarow_n": "{{player}} cleared a line, shifting the pieces on the board upwards.",
        "fourinarow_ne": "{{player}} cleared two lines, shifting the pieces on the board upwards and rightwards.",
        "fourinarow_nw": "{{player}} cleared two lines, shifting the pieces on the board upwards and leftwards.",
        "fourinarow_s": "{{player}} cleared a line, shifting the pieces on the board downwards.",
        "fourinarow_se": "{{player}} cleared two lines, shifting the pieces on the board downwards and rightwards.",
        "fourinarow_sw": "{{player}} cleared two lines, shifting the pieces on the board downwards and leftwards.",
        "fourinarow_w": "{{player}} cleared a line, shifting the pieces on the board leftwards.",
        "gliss": "{{player}} moved their glider at {{where}} off the edge of the board.",
        "nonum": "{{player}} removed a piece from {{where}}.",
        "phutball_one": "{{count}} player was removed.",
        "phutball_other": "{{count}} players were removed.",
        "remove_one": "{{player}} removed 1 piece from {{where}}.",
        "remove_other": "{{player}} removed {{count}} pieces from {{where}}.",
        "spook": "{{player}} removed an opponent's ball at {{where}}.",
        "spook_drop_one": "{{player}} removed a ball at {{where}}, dropping 1 ball from {{how}}.",
        "spook_drop_other": "{{player}} removed a ball at {{where}}, dropping {{count}} balls from {{how}}.",
        "twixt": "{{player}} removed a link at {{where}}.",
        "volo": "{{player}} chose to retain the region at {{how}}, removing {{num}} opponent's birds."
    },
    "REPAIR": {
        "simple": "{{player}} repairs."
    },
    "RESET": {
        "biscuit": "A new round has begun.",
        "queensland": "The second game has begun."
    },
    "RESIGN": "{{player}} has resigned.",
    "ROLL": {
        "single": "The die was rolled: {{values}}.",
        "tablero": "The dice were rolled: {{values}}."
    },
    "SACRIFICE": {
        "moonsquad": "{{player}} sacrificed an ore ({{ore}}) to move their squads.",
        "nowhat": "{{player}} sacrificed a piece at {{where}}."
    },
    "SCORE_REPORT": "{{player}}'s score is now {{score}}.",
    "SELECT": {
        "fnap": "{{player}} selected the tile {{tile}}.",
        "resolve": "{{player}} selects the piece in a crosscut at {{where}}.",
        "slyde_fixed_opponent": "{{player}} changed the state of their opponent's piece at {{where}} from mobile to fixed.",
        "slyde_fixed_self": "{{player}} changed the state of their own piece at {{where}} from mobile to fixed.",
        "slyde_mobile_opponent": "{{player}} changed the state of their opponent's piece at {{where}} from fixed to mobile.",
        "slyde_mobile_self": "{{player}} changed the state of their own piece at {{where}} from fixed to mobile.",
        "spree": "{{player}} handed a ball of colour {{who}} to the opponent."
    },
    "SET": {
        "biscuit_biscuit_one": "{{player}} scored a biscuit.",
        "biscuit_biscuit_other": "{{player}} scored {{count}} biscuits.",
        "biscuit_cross": "{{player}} scored a hot cross biscuit.",
        "biscuit_elevensies": "{{player}} scored elevensies. All other players were forced to draw a card.",
        "biscuit_hot": "{{player}} scored a hot biscuit.",
        "biscuit_straight": "{{player}} scored a straight of length {{count}}.",
        "fnap_circles": "The circle tile at {{where}} is isolated.",
        "fnap_triplets_one": "{{player}} scored {{count}} triplet.",
        "fnap_triplets_other": "{{player}} scored {{count}} triplets.",
        "quincunx_pairs_one": "{{player}} scored {{count}} pair.",
        "quincunx_pairs_other": "{{player}} scored {{count}} pairs.",
        "quincunx_sets_one": "{{player}} scored {{count}} set.",
        "quincunx_sets_other": "{{player}} scored {{count}} sets.",
        "quincunx_straights_one": "{{player}} scored {{count}} straight.",
        "quincunx_straights_other": "{{player}} scored {{count}} straights.",
        "quincunx_flushes_one": "{{player}} scored {{count}} flush.",
        "quincunx_flushes_other": "{{player}} scored {{count}} flushes.",
        "quincunx_powerplay": "{{player}} scored a power play!"
    },
    "SOW": {
        "general_one": "{{player}} sowed seeds from the following pit: {{pits}}.",
        "general_other": "{{player}} sowed seeds from the following pits: {{pits}}.",
        "into": "{{player}} sowed into the pits {{pits}}.",
        "prudh": "{{player}} sowed checkers from {{from}} to {{to}}."
    },
    "STALEMATE": {
        "biscuit": "The hand has gone stale."
    },
    "SWAP": {
        "deckfish": "{{player}} swapped {{what}} from the market with {{with}} at {{where}}.",
        "nex": "{{player}} swapped a piece of their colour at {{where}} to a neutral piece.",
        "nex_neutral": "{{player}} swapped a neutral piece at {{where}} to a piece of their colour.",
        "resolve": "The piece is swapped to {{where}}."
    },
    "TAKE": {
        "blastradius_one": "{{player}} removed one of their own pieces from {{where}}.",
        "blastradius_other": "{{player}} removed a stack of {{count}} of their own pieces from {{where}}.",
        "buku_row_one": "{{player}} collected 1 piece from row {{row}}.",
        "buku_row_other": "{{player}} collected {{count}} pieces from row {{row}}.",
        "buku_row_bonus": "{{player}} collected {{count}} pieces from row {{row}}, plus one additional piece.",
        "buku_col_one": "{{player}} collected 1 piece from column {{col}}.",
        "buku_col_other": "{{player}} collected {{count}} pieces from column {{col}}.",
        "chase": "A {{what}} was fed to the chamber.",
        "general_one": "{{player}} took a piece from {{from}}.",
        "general_other": "{{player}} took {{count}} pieces from {{from}}.",
        "moonsquad": "{{player}} took an ore ({{ore}}).",
        "sploof": "{{player}} took a neutral ball at {{from}}.",
        "streetcar": "{{player}} took a housing limit from {{from}}.",
        "streetcar_1": "{{player}} took an ORANGE housing limit from {{from}}.",
        "streetcar_2": "{{player}} took a YELLOW housing limit from {{from}}.",
        "streetcar_3": "{{player}} took a BLACK housing limit from {{from}}.",
        "streetcar_4": "{{player}} took a WHITE housing limit from {{from}}.",
        "tablero": "{{player}} took one of their checkers from the stack at {{from}}."
    },
    "TIMEOUT": "{{player}} lost on time.",
    "UNFURL": {
        "amoeba": "{{player}} sowed {{count}} pieces from {{from}} to {{to}}.",
        "furl": "{{player}} unfurls {{count}} pieces from {{from}} to {{to}}."
    },
    "USE": {
        "camelot_castle_move_one": "{{player}} used has 1 more castle move.",
        "camelot_castle_move_other": "{{player}} used has {{count}} more castle moves.",
        "camelot_castle_move_none": "{{player}} has no more castle moves."
    },
    "WINNERSNONE": "There were no winners.",
    "WINNERS_one": "The following player won: {{winners}}.",
    "WINNERS_other": "The following players won: {{winners}}.",
    "homeworlds": {
        "BUILD": "{{player}} build a {{what}} in the {{where}} system.",
        "CAPTURE": "{{player}} captured a {{what}} in the {{where}} system.",
        "CATASTROPHE": "An overpopulation of {{colour}} led to a catastrophe in {{where}}.",
        "CONVERT": "{{player}} changed a {{what}} into a {{into}} in the {{where}} system.",
        "DISCOVER": "{{player}} discovered a new {{what}} system and named it {{name}}.",
        "ESTABLISH": "A {{ship}} colony ship belonging to {{player}} has landed in a {{stars}} system.",
        "MOVE": "{{player}} flew their {{what}} from {{from}} to {{to}}.",
        "PASS": "{{player}} passed an action.",
        "SACRIFICE": "{{player}} sacrificed a {{what}} in the {{where}} system."
    }
}
