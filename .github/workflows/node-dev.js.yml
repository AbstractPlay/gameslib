# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Dev Server CI

on:
  push:
    branches: [ "develop" ]
  repository_dispatch:
    types: [dep_update_dev]
  workflow_dispatch:

jobs:
    build-dev:

        runs-on: ubuntu-latest

        # strategy:
        #   matrix:
        #     node-version: [16.x, 18.x, 20.x]
        #     # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
        - uses: actions/checkout@v3
          with:
            ref: "develop"
        - name: Use Node.js 18.x
          uses: actions/setup-node@v3
          with:
            node-version: 18.x
            cache: 'npm'
        - run: echo "@abstractplay:registry=https://npm.pkg.github.com/" >> .npmrc
        - run: echo "//npm.pkg.github.com/:_authToken=${{secrets.PAT_READ_PACKAGES}}" >> .npmrc
        - run: npm i
        - run: npm remove @abstractplay/renderer
        - run: npm i @abstractplay/renderer@development
        - run: npm list @abstractplay/renderer
        - run: cat package-lock.json
        - run: npm test --if-present
        # prerelease --preid=ci-$GITHUB_RUN_ID
        - run: npm version prerelease --preid=ci-$GITHUB_RUN_ID --no-git-tag-version
        - run: npm run build
        - run: npm pack
        - name: Upload
          uses: actions/upload-artifact@v3
          with:
            name: package
            path: "*.tgz"

    publish-dev:
        needs: [build-dev]
        runs-on: ubuntu-latest
        steps:
        - name: Upload
          uses: actions/download-artifact@v3
          with:
            name: package
        - uses: actions/setup-node@v3
          with:
            node-version: 18.x
            registry-url: https://npm.pkg.github.com/
            scope: "@abstractplay"
        - run: echo "registry=https://npm.pkg.github.com/@abstractplay" > .npmrc
        - run: npm publish $(ls *.tgz) --tag development
          env:
            NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    relay-dev:
        needs: [publish-dev]
        runs-on: ubuntu-latest
        steps:
          - name: Trigger frontend build and test
            run: |
              curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.PAT_WORKFLOWS }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/abstractplay/front/dispatches \
              -d '{"event_type": "dep_update_dev"}'

          - name: Trigger backend build and test
            run: |
                curl -L \
                -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.PAT_WORKFLOWS }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/abstractplay/node-backend/dispatches \
                -d '{"event_type": "dep_update_dev"}'
